{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/blizzy/Development/xAGI/projectom/projectomclient/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\n\nexport default function Home() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [messages, setMessages] = useState<Array<{ type: string; content: string }>>([]);\n  const [loading, setLoading] = useState(false);\n  const [taskId, setTaskId] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!prompt.trim()) return;\n    \n    // Add user message to chat\n    const userMessage = { type: \"user\", content: prompt };\n    setMessages((prev) => [...prev, userMessage]);\n    \n    // Show loading state\n    setLoading(true);\n    \n    try {\n      // Submit the prompt to the backend\n      const response = await fetch('/api/prompt', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt }),\n      });\n      \n      const data = await response.json();\n      \n      if (data.status === 'success') {\n        setTaskId(data.message.split(':')[1].trim());\n        \n        // Start polling for results\n        pollForResults(data.message.split(':')[1].trim());\n      } else {\n        // Show error message\n        setMessages((prev) => [...prev, { type: \"system\", content: `Error: ${data.message}` }]);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error submitting prompt:', error);\n      setMessages((prev) => [...prev, { type: \"system\", content: \"Failed to connect to the server.\" }]);\n      setLoading(false);\n    }\n    \n    // Clear input\n    setPrompt(\"\");\n  };\n  \n  const pollForResults = async (id: string) => {\n    // Poll for results every 1 second\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch(`/api/tasks/${id}`);\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          // Results are ready\n          clearInterval(interval);\n          setMessages((prev) => [...prev, { type: \"assistant\", content: data.results }]);\n          setLoading(false);\n          setTaskId(null);\n        } else if (data.status === 'error') {\n          // Error occurred\n          clearInterval(interval);\n          setMessages((prev) => [...prev, { type: \"system\", content: `Error: ${data.message}` }]);\n          setLoading(false);\n          setTaskId(null);\n        }\n        // If still processing, continue polling\n      } catch (error) {\n        console.error('Error polling for results:', error);\n        clearInterval(interval);\n        setMessages((prev) => [...prev, { type: \"system\", content: \"Failed to retrieve results.\" }]);\n        setLoading(false);\n        setTaskId(null);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className=\"flex flex-col min-h-screen p-4 bg-gray-50 dark:bg-gray-900\">\n      <header className=\"flex items-center justify-center py-4 border-b dark:border-gray-700\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">ProjectOM</h1>\n      </header>\n      \n      <main className=\"flex-1 flex flex-col max-w-4xl mx-auto w-full\">\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n          {messages.length === 0 ? (\n            <div className=\"flex flex-col items-center justify-center h-full\">\n              <Image\n                src=\"/manus-logo.svg\"\n                alt=\"Manus Logo\"\n                width={120}\n                height={120}\n                className=\"mb-4 opacity-50\"\n                priority\n              />\n              <h2 className=\"text-xl text-gray-500 dark:text-gray-400\">\n                Hello! What can I do for you today?\n              </h2>\n            </div>\n          ) : (\n            messages.map((message, index) => (\n              <div\n                key={index}\n                className={`p-4 rounded-lg ${\n                  message.type === \"user\"\n                    ? \"bg-blue-100 dark:bg-blue-900 ml-auto max-w-[80%]\"\n                    : message.type === \"assistant\"\n                    ? \"bg-gray-100 dark:bg-gray-800 mr-auto max-w-[80%]\"\n                    : \"bg-red-100 dark:bg-red-900 mx-auto max-w-[90%]\"\n                }`}\n              >\n                <p className=\"text-sm font-medium mb-1\">\n                  {message.type === \"user\" ? \"You\" : message.type === \"assistant\" ? \"Manus\" : \"System\"}\n                </p>\n                <div className=\"text-gray-800 dark:text-gray-200 whitespace-pre-wrap\">\n                  {message.content}\n                </div>\n              </div>\n            ))\n          )}\n          \n          {loading && (\n            <div className=\"flex items-center justify-center p-4\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-gray-900 dark:border-white\"></div>\n              <p className=\"ml-2 text-gray-600 dark:text-gray-300\">\n                {taskId ? \"Processing your request...\" : \"Sending...\"}\n              </p>\n            </div>\n          )}\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"border-t p-4 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-2\">\n            <input\n              type=\"text\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Give Manus a task to work on...\"\n              className=\"flex-1 p-2 border dark:border-gray-700 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n              disabled={loading}\n            />\n            <button\n              type=\"submit\"\n              disabled={loading || !prompt.trim()}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n            >\n              Send\n            </button>\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}